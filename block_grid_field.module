<?php

/**
 * @file
 * Contains block_grid_field.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Render\Element\RenderElement;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_help().
 */
function block_grid_field_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the block_grid_field module.
    case 'help.page.block_grid_field':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Special Dropdown to indicate color of a stripe. See the settings page to enter some values') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function block_grid_field_theme() {
  return [
    'block_grid_select' => array(
      'render element' => 'element',
      'template' => 'block-grid-field-select',
      'base hook' => 'select',
    ),
  ];
}

/**
 * Prepares variables for select element templates.
 *
 * Default template: select.html.twig.
 *
 * It is possible to group options together; to do this, change the format of
 * $options to an associative array in which the keys are group labels, and the
 * values are associative arrays in the normal $options format.
 *
 * @param $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 *     Properties used: #title, #value, #options, #description, #extra,
 *     #multiple, #required, #name, #attributes, #size.
 */
function block_grid_field_preprocess_block_grid_select(&$variables) {
  $element = $variables['element'];

  Element::setAttributes($element, array('id', 'name', 'size'));
  RenderElement::setAttributes($element, array('form-select'));

  $variables['attributes'] = $element['#attributes'];
  $variables['options'] = form_select_options($element);
}
